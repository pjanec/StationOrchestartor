using SiteKeeper.Shared.Enums;
using System;
using System.ComponentModel.DataAnnotations;

namespace SiteKeeper.Shared.DTOs.MasterSlave
{
    /// <summary>
    /// DTO sent from Slave to Master to provide status updates for an ongoing task.
    /// This can be for intermediate progress or final completion/failure.
    /// </summary>
    public class SlaveTaskProgressUpdate
    {
        /// <summary>
        /// Unique identifier of the overall operation this task belongs to.
        /// </summary>
        [Required]
        public string OperationId { get; set; } = string.Empty;

        /// <summary>
        /// The unique identifier for the specific task whose status is being reported.
        /// </summary>
        [Required]
        public string TaskId { get; set; } = string.Empty;

        /// <summary>
        /// Name of the node (slave agent) reporting the status.
        /// </summary>
        [Required]
        public string NodeName { get; set; } = string.Empty;

        /// <summary>
        /// The current status of the task on the agent, typically a string representation of <see cref="NodeTaskStatus"/>.
        /// </summary>
        /// <example>"InProgress" or "Succeeded"</example>
        [Required]
        public string Status { get; set; } = string.Empty; // Represents NodeTaskStatus enum as string

        /// <summary>
        /// Optional. A human-readable message providing more details about the current task status or progress.
        /// </summary>
        public string? Message { get; set; }

        /// <summary>
        /// Optional. The current progress of the task, as a percentage (0-100).
        /// </summary>
        public int? ProgressPercent { get; set; }

        /// <summary>
        /// Optional. A JSON string containing results or output data from the task, especially upon completion.
        /// For readiness checks, this might contain a serialized <see cref="SlaveTaskReadinessReport"/>.
        /// </summary>
        public string? ResultJson { get; set; }

        /// <summary>
        /// Timestamp (UTC) when this status update was generated by the agent.
        /// </summary>
        [Required]
        public DateTime TimestampUtc { get; set; }
    }
} 