using SiteKeeper.Shared.Enums;
using System;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace SiteKeeper.Shared.DTOs.AgentHub
{
    /// <summary>
    /// DTO used by a Slave Agent to send heartbeat signals to the Master.
    /// </summary>
    /// <remarks>
    /// Heartbeats are sent periodically by agents to indicate they are still online and responsive.
    /// They include the agent's ID, current status, a timestamp, and optionally a summary of node health,
    /// active task count, and agent software version.
    /// Corresponds to the `AgentHeartbeat` schema in `web api swagger.yaml`.
    /// </remarks>
    public class AgentHeartbeat
    {
        /// <summary>
        /// Unique identifier of the agent sending the heartbeat, typically the node name.
        /// </summary>
        /// <example>"AppServer01"</example>
        [Required]
        public string AgentId { get; set; } = string.Empty;

        /// <summary>
        /// Timestamp (UTC) when the heartbeat was generated by the agent.
        /// </summary>
        /// <example>"2023-10-27T12:05:00Z"</example>
        [Required]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// The current status of the agent.
        /// </summary>
        /// <example>AgentStatus.Online</example>
        [Required]
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public AgentStatus AgentStatus { get; set; }

        /// <summary>
        /// Optional. A summary of the agent node's health.
        /// </summary>
        /// <example>NodeHealthSummary.Healthy</example>
        [JsonConverter(typeof(JsonStringEnumConverter))]
        public NodeHealthSummary? NodeHealthSummary { get; set; }

        /// <summary>
        /// Optional. The number of tasks currently active or being processed by the agent.
        /// </summary>
        /// <example>2</example>
        public int? ActiveTasksCount { get; set; }

        /// <summary>
        /// Optional. The version of the Slave Agent software running on the node.
        /// </summary>
        /// <example>"1.1.0-slave"</example>
        public string? CurrentAgentVersion { get; set; }
    }
} 