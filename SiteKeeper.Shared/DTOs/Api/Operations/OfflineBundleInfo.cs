using System;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace SiteKeeper.Shared.DTOs.API.Operations
{
    /// <summary>
    /// Contains information about a single offline update bundle found during a scan.
    /// </summary>
    /// <remarks>
    /// This DTO is part of the <see cref="OfflineBundlesResponse"/> and aligns with the
    /// 'OfflineBundleInfo' schema in `web api swagger.yaml`.
    /// </remarks>
    public class OfflineBundleInfo
    {
        /// <summary>
        /// Gets or sets a unique identifier for the found bundle.
        /// This ID might be generated by the master agent based on the source and bundle properties.
        /// </summary>
        /// <example>"bundle-001-D"</example>
        [Required]
        [JsonPropertyName("bundleId")]
        public string BundleId { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the environment version contained in this bundle.
        /// </summary>
        /// <example>"1.2.5"</example>
        [Required]
        [JsonPropertyName("versionId")]
        public string VersionId { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the type of environment this bundle is intended for.
        /// This helps ensure compatibility.
        /// </summary>
        /// <example>"MyProdEnvType"</example>
        [Required]
        [JsonPropertyName("environmentType")]
        public string EnvironmentType { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the creation date of the bundle or the date it was found/last modified.
        /// </summary>
        /// <example>"2025-05-28T00:00:00Z"</example>
        [Required]
        [JsonPropertyName("bundleDate")]
        public DateTime BundleDate { get; set; }

        /// <summary>
        /// Gets or sets the full path where the bundle was found on the source media.
        /// </summary>
        /// <example>"D:\\Updates\\MyProdEnv_1.2.5_bundle"</example>
        [Required]
        [JsonPropertyName("sourcePath")]
        public string SourcePath { get; set; } = string.Empty;

        /// <summary>
        /// Gets or sets the approximate size of the bundle in Megabytes.
        /// </summary>
        /// <example>250.75</example>
        [JsonPropertyName("sizeMb")]
        public float? SizeMb { get; set; } // Swagger shows float, nullable is a good practice for optional numeric
    }
} 